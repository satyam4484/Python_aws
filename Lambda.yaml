AWSTemplateFormatVersion: '2010-09-09'
Description: Lambda function created from a container image in ECR

Resources:
  MyLambdaLogGroup:
    Type: 'AWS::Logs::LogGroup'
    Properties: 
      LogGroupName: /aws/lambda/MyLambdaFunction
      RetentionInDays: 14

  MyLambdaFunction:
    Type: 'AWS::Lambda::Function'
    Properties: 
      FunctionName: MyLambdaFunction
      Role: arn:aws:iam::992382722885:role/lambda-ex
      Code: 
        ImageUri: 992382722885.dkr.ecr.us-east-1.amazonaws.com/python:0.0.2
      Timeout: 900
      MemorySize: 128
      PackageType: Image
      Environment:
        Variables:
          bucket: dm-py

  

  # LambdaExecutionRole:
  #   Type: 'AWS::IAM::Role'
  #   Properties:
  #     RoleName: lambda-ex-new
  #     AssumeRolePolicyDocument: 
  #       Version: "2012-10-17"
  #       Statement:
  #         - Effect: Allow
  #           Principal:
  #             Service: lambda.amazonaws.com
  #           Action: sts:AssumeRole
  #     Policies:
  #       - PolicyName: LambdaExecutionPolicy
  #         PolicyDocument:
  #           Version: "2012-10-17"
  #           Statement:
  #             - Effect: Allow
  #               Action:
  #                 - logs:CreateLogGroup
  #                 - logs:CreateLogStream
  #                 - logs:PutLogEvents
  #               Resource: 
  #                 - arn:aws:logs:*:*:log-group:/aws/lambda/MyLambdaFunction:*
  #             - Effect: Allow
  #               Action:
  #                 - s3:GetObject
  #                 - s3:PutObject
  #               Resource: 
  #                 - arn:aws:s3:::dm-py/*

  
# aws cloudformation create-stack --template-body file://lambda.yaml --stack-name my-lambda-function
# aws lambda invoke --function-name MyLambdaFunction response.json
# aws lambda invoke --function-name MyLambdaFunction response.json --log-type Tail --query 'LogResult' --output text | base64 -d > log.txt
# aws cloudformation delete-stack --stack-name my-lambda-function




